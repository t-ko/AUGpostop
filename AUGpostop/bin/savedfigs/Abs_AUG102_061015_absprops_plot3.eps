%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Microsoft Windows 7.
%%Title: savedfigs\Abs_AUG102_061015_absprops_plot3.eps
%%CreationDate: 06/29/2015  12:58:19
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    96   238   490   557
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    96   238   490   557
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1152 6636 csm

    0   -48  4730  3828 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5040 3781 rf
6 w
0 2580 3685 0 0 -2580 875 3007 4 MP
PP
-3685 0 0 2580 3685 0 0 -2580 875 3007 5 MP stroke
4 w
DO
SO
6 w
0 sg
 875 3007 mt 4560 3007 L
 875 3007 mt  875  427 L
 875 3007 mt  875 2970 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 300 FMSR

 792 3320 mt 
(0) s
1927 3007 mt 1927 2970 L
1844 3320 mt 
(2) s
2980 3007 mt 2980 2970 L
2897 3320 mt 
(4) s
4033 3007 mt 4033 2970 L
3950 3320 mt 
(6) s
 875 3007 mt  911 3007 L
 674 3118 mt 
(0) s
 875 2362 mt  911 2362 L
 674 2473 mt 
(1) s
 875 1717 mt  911 1717 L
 674 1828 mt 
(2) s
 875 1071 mt  911 1071 L
 674 1182 mt 
(3) s
 875  427 mt  911  427 L
 674  538 mt 
(4) s
 875  373 mt 
(x 10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 200 FMSR

1442  187 mt 
(-8) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 420 FMSR

 525 4058 mt  -90 rotate
(Blood Flow Index \(cm) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 336 FMSR

 315   40 mt  -90 rotate
(2) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 420 FMSR

 525 -146 mt  -90 rotate
(/s\)) s
90 rotate
gs 875 427 3686 2581 rc
36 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
535 108 458 -74 572 159 547 -691 563 136 310 -32 192 111 929 2045 8 MP stroke
gr

36 w
c8
gs 651 1291 3734 1248 rc
80 W
929 2045 PD
80 W
1121 2156 PD
80 W
1431 2124 PD
80 W
1994 2260 PD
80 W
2541 1569 PD
80 W
3113 1728 PD
80 W
3571 1654 PD
80 W
4106 1762 PD
gr

gs 875 427 3686 2581 rc
453 -102 535 416 461 -467 543 -98 529 236 528 124 339 -316 237 -138 
904 2294 9 MP stroke
gr

gs 626 1357 4182 1216 rc
80 W
904 2294 PD
80 W
1141 2156 PD
80 W
1480 1840 PD
80 W
2008 1964 PD
80 W
2537 2200 PD
80 W
3080 2102 PD
80 W
3541 1635 PD
80 W
4076 2051 PD
80 W
4529 1949 PD
gr

gs 875 427 3686 2581 rc
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
671 -19 497 204 521 48 535 -496 305 95 247 -121 907 2101 7 MP stroke
gr

c9
gs 629 1301 3333 1079 rc
80 W
907 2101 PD
80 W
1154 1980 PD
80 W
1459 2075 PD
80 W
1994 1579 PD
80 W
2515 1627 PD
80 W
3012 1831 PD
80 W
3683 1812 PD
gr

gs 875 427 3686 2581 rc
c8
535 694 491 -304 560 339 327 -323 189 -138 907 2168 6 MP stroke
gr

c8
gs 629 1429 2659 1286 rc
80 W
907 2168 PD
80 W
1096 2030 PD
80 W
1423 1707 PD
80 W
1983 2046 PD
80 W
2474 1742 PD
80 W
3009 2436 PD
gr

gs 875 427 3686 2581 rc
c9
564 313 458 416 369 -531 246 -88 902 1582 5 MP stroke
gr

c9
gs 624 685 2194 1286 rc
80 W
902 1582 PD
80 W
1148 1494 PD
80 W
1517 963 PD
80 W
1975 1379 PD
80 W
2539 1692 PD
gr

gs 875 427 3686 2581 rc
500 76 640 864 525 159 419 -788 633 614 288 -294 250 -1090 902 2128 8 MP stroke
gr

gs 624 292 3812 2115 rc
80 W
902 2128 PD
80 W
1152 1038 PD
80 W
1440 744 PD
80 W
2073 1358 PD
80 W
2492 570 PD
80 W
3017 729 PD
80 W
3657 1593 PD
80 W
4157 1669 PD
gr

gs 875 427 3686 2581 rc
486 454 498 -190 583 -230 444 33 392 -449 229 -13 908 2081 7 MP stroke
gr

gs 630 954 3189 1406 rc
80 W
908 2081 PD
80 W
1137 2068 PD
80 W
1529 1619 PD
80 W
1973 1652 PD
80 W
2556 1422 PD
80 W
3054 1232 PD
80 W
3540 1686 PD
gr

gs 875 427 3686 2581 rc
445 -402 526 26 510 476 361 3 111 -1276 924 2507 6 MP stroke
gr

gs 646 953 2510 1833 rc
80 W
924 2507 PD
80 W
1035 1231 PD
80 W
1396 1234 PD
80 W
1906 1710 PD
80 W
2432 1736 PD
80 W
2877 1334 PD
gr

gs 875 427 3686 2581 rc
c8
510 -698 380 301 232 422 909 1588 4 MP stroke
gr

c8
gs 631 1310 1679 1280 rc
80 W
909 1588 PD
80 W
1141 2010 PD
80 W
1521 2311 PD
80 W
2031 1613 PD
gr

gs 875 427 3686 2581 rc
c9
499 339 570 -226 409 533 602 -400 539 -651 361 43 221 -374 917 2437 8 MP stroke
gr

c9
gs 639 777 3758 1939 rc
80 W
917 2437 PD
80 W
1138 2063 PD
80 W
1499 2106 PD
80 W
2038 1455 PD
80 W
2640 1055 PD
80 W
3049 1588 PD
80 W
3619 1362 PD
80 W
4118 1701 PD
gr

gs 875 427 3686 2581 rc
c8
538 102 531 823 579 -144 481 -602 593 -318 324 153 170 -12 914 1902 8 MP stroke
gr

c8
gs 636 701 3773 1621 rc
80 W
914 1902 PD
80 W
1084 1890 PD
80 W
1408 2043 PD
80 W
2001 1725 PD
80 W
2482 1123 PD
80 W
3061 979 PD
80 W
3592 1802 PD
80 W
4130 1904 PD
gr

gs 875 427 3686 2581 rc
c9
494 -73 487 -40 576 270 512 77 519 -172 590 360 291 -371 195 186 
897 1909 9 MP stroke
gr

c9
gs 619 1446 4221 1092 rc
80 W
897 1909 PD
80 W
1092 2095 PD
80 W
1383 1724 PD
80 W
1973 2084 PD
80 W
2492 1912 PD
80 W
3004 1989 PD
80 W
3580 2259 PD
80 W
4067 2219 PD
gr

gs 875 427 3686 2581 rc
c8
614 264 486 289 582 -201 495 -7 479 -364 348 59 192 -81 897 2095 8 MP stroke
gr

c8
gs 619 1223 3753 1151 rc
80 W
897 2095 PD
80 W
1089 2014 PD
80 W
1437 2073 PD
80 W
1916 1709 PD
80 W
2411 1702 PD
80 W
2993 1501 PD
80 W
3479 1790 PD
80 W
4093 2054 PD
gr

gs 875 427 3686 2581 rc
499 94 526 80 593 -378 493 114 475 -650 573 161 331 -537 175 224 
896 2096 9 MP stroke
gr

gs 618 752 4222 1847 rc
80 W
896 2096 PD
80 W
1071 2320 PD
80 W
1402 1783 PD
80 W
1975 1944 PD
80 W
2450 1294 PD
80 W
2943 1408 PD
80 W
3536 1030 PD
80 W
4062 1110 PD
gr

gs 875 427 3686 2581 rc
gr

0 sg
 855 3684 mt 
(Post-Operative Day) s
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
